door	N/N	#x.x @ door	-1.0
door	N/N	#x414.#x402.turn(until(is(x414 @ door,at(x402))))	-1.0
door	N/N	#x453.#x445.is(x453 @ door,at(x445))	-1.0
door	N/N	#x410.#x400.turn(until(is(x410 @ door,x400)))	-1.0
door	N/N	#x391.#x388.is(x391 @ door,x388)	-1.0
door	N/N	l(x,x)	-1.0
door	N	#x.door(x)	0.0
door	N	#x411.#x400.turn(until(is(door(x411),x400)))	-1.0
door	N	#x415.#x402.turn(until(is(door(x415),at(x402))))	-1.0
door	NP	#x.door(x)	0.0
hall	N	#x.hall(x)	0.0
main	N/N	#x.x @ main	0.0
your	NP/N	#x.x	0.0
your	NP/N	#x.x @ your	-1.0
your	NP/N	#x450.#x445.is(x450,yourt(x445))	-1.0
your	NP/N	l(x,x)	-1.0
red	N/N	#x.x @ red	0.0
should	(S\NP)/(S\NP)	#x.#y.y @ that(x)	0.0
should	(S\NP)/(S\NP)	l(x,x)	-1.0
should	(S\NP)/(S\NP)	#x546.#x441.#x440.x440 @ that(x546 @ x441)	-1.0
west	N	west	0.0
west	NP	west	0.0
from	((S\NP)\(S\NP))/NP	#x.x	0.0
from	((S\NP)\(S\NP))/NP	l(x,x)	-1.0
from	(NP\NP)/NP	#x.#y.until(is(x,y))	0.0
from	(NP\NP)/NP	#x435.#x433.is(x433,from(x435))	-1.0
from	(NP\NP)/NP	l(x,x)	-1.0
locked	N/N	#x477.x477 @ locked	-1.0
locked	N/N	#x414.#x402.turn(until(is(x414 @ locked,at(x402))))	-1.0
locked	N/N	#x453.#x445.is(x453 @ locked,at(x445))	-1.0
locked	N/N	#x410.#x400.turn(until(is(x410 @ locked,x400)))	-1.0
locked	N/N	#x391.#x388.is(x391 @ locked,x388)	-1.0
locked	N/N	l(x,x)	-1.0
you	NP	#x.verify(x)	0.0
you	NP	#x.x	0.0
you	NP	you	-1.0
you	NP	l(x,x)	-1.0
you	NP/NP	#x.x	0.0
you	NP/NP	#x.#y.x @ you(y)	-1.0
you	NP/NP	#x.you(x)	-1.0
you	NP/NP	l(x,x)	-1.0
glass	N/N	#x.x @ glass	0.0
in	(NP\NP)/NP	#x383.#x382.x382 @ x383	-1.0
in	(NP\NP)/NP	#x.#y.is(y,at(x))	0.0
in	(NP\NP)/NP	#x.#y.#z.is(y,at(x,z))	-1.0
in	(NP\NP)/NP	#x.#y.until(is(x,y))	-1.0
in	(NP\NP)/NP	l(x,x)	-1.0
in	(NP\NP)/NP	#x417.#x403.turn(until(is(x403,at(x417))))	-1.0
in	(NP\NP)/NP	#x434.#x433.is(x433,x434)	-1.0
in	(NP\NP)/NP	#x416.#x403.turn(until(is(x403,x416)))	-1.0
in	(NP\NP)/NP	#x435.#x433.is(x433,in(x435))	-1.0
in	(NP\NP)/NP	#x.#y.is(x,at(y))	-1.0
in	(NP\NP)/NP	#x.#y.y @ at(x)	-1.0
in	(NP\NP)/NP	#x.at(x)	-1.0
in	NP/NP	#x.x	0.0
old	N/N	#x.x @ old	0.0
is	N	#x.#y.is(x,y)	0.0
is	N	#x.#y.is(y,x)	0.0
is	N	#x.x	0.0
is	NP/NP	#x.#y.x @ is(y)	-1.0
is	NP/NP	#x.is(x)	-1.0
is	NP/NP	l(x,x)	-1.0
is	NP/NP	#x611.#x397.is(x397,x611)	-1.0
is	NP/NP	#x614.#x609.x609 @ x614	-1.0
is	NP/NP	#x615.#x609.x609	-1.0
is	NP/NP	#x622.x622	-1.0
an	NP/N	#x.x	0.0
steps	N	#x377.steps(x377)	-1.0
doors	N	#x.doors(x)	0.0
2	N/N	#x414.#x402.turn(until(is(x414 @ 2,at(x402))))	-1.0
2	N/N	#x453.#x445.is(x453 @ 2,at(x445))	-1.0
2	N/N	#x410.#x400.turn(until(is(x410 @ 2,x400)))	-1.0
2	N/N	#x391.#x388.is(x391 @ 2,x388)	-1.0
2	N/N	#x393.x393 @ 2	-1.0
2	N/N	l(x,x)	-1.0
2	NP/N	#x.x @ 2	0.0
2	NP/N	#x450.#x445.is(x450,2t(x445))	-1.0
2	NP/N	l(x,x)	-1.0
at	(NP\NP)/NP	#x434.#x433.is(x433,x434)	-1.0
at	(NP\NP)/NP	#x435.#x433.is(x433,at(x435))	-1.0
at	NP/NP	#x.at(x)	-1.0
at	NP/NP	#x.#y.x @ at(y)	-1.0
at	NP/NP	l(x,x)	-1.0
3	NP/N	#x378.x378 @ 3	-1.0
left	N/N	#x.x @ left	-1.0
left	N/N	#x414.#x402.turn(until(is(x414 @ left,at(x402))))	-1.0
left	N/N	#x453.#x445.is(x453 @ left,at(x445))	-1.0
left	N/N	#x410.#x400.turn(until(is(x410 @ left,x400)))	-1.0
left	N/N	#x391.#x388.is(x391 @ left,x388)	-1.0
left	N/N	l(x,x)	-1.0
left	N	left	0.0
left	NP	left	-1.0
left	NP	#x.left(x)	-1.0
left	NP	l(x,x)	-1.0
5	NP/N	#x379.x379 @ 5	-1.0
carpet	N	#x.carpet(x)	0.0
plant	N	#x.plant(x)	0.0
plant	N	#x452.#x444.is(plant(x452),x444)	-1.0
plant	N	#x454.#x445.is(plant(x454),at(x445))	-1.0
spaces	N	#x.spaces(x)	0.0
steel	N/N	#x.x @ steel	0.0
away	(S\NP)\(S\NP)	#x.x	0.0
away	(S\NP)\(S\NP)	l(x,x)	-1.0
away	NP	at(south)	0.0
away	NP	#x.away(x)	-1.0
away	NP	away	-1.0
away	NP	l(x,x)	-1.0
be	S\NP	#x422.x422	-1.0
be	S\NP	l(x,x)	-1.0
be	(S\NP)/NP	#x.is(x)	0.0
be	(S\NP)/NP	#x.x	0.0
be	(S\NP)/NP	#x447.#x444.is(x447,x444)	-1.0
be	(S\NP)/NP	#x448.#x445.is(x448,at(x445))	-1.0
be	(S\NP)/NP	l(x,x)	-1.0
south	N	south	0.0
south	NP	south	0.0
north	N	north	0.0
north	NP	north	0.0
yellow	N/N	#x391.#x388.is(x391 @ yellow,x388)	-1.0
yellow	N/N	#x393.x393 @ yellow	-1.0
yellow	N/N	#x394.#x390.is(x394 @ yellow,at(x390))	-1.0
yellow	N/N	#x414.#x402.turn(until(is(x414 @ yellow,at(x402))))	-1.0
yellow	N/N	#x410.#x400.turn(until(is(x410 @ yellow,x400)))	-1.0
yellow	N/N	l(x,x)	-1.0
turn	S/NP	#x373.turn(x373)	-1.0
turn	S/NP	l(x,x)	-1.0
east	N	east	0.0
east	NP	east	0.0
east	NP	#x.east(x)	-1.0
east	NP	l(x,x)	-1.0
modern	N/N	#x.x @ modern	-1.0
modern	N/N	#x414.#x402.turn(until(is(x414 @ modern,at(x402))))	-1.0
modern	N/N	#x453.#x445.is(x453 @ modern,at(x445))	-1.0
modern	N/N	#x410.#x400.turn(until(is(x410 @ modern,x400)))	-1.0
modern	N/N	#x391.#x388.is(x391 @ modern,x388)	-1.0
modern	N/N	l(x,x)	-1.0
are	NP	#x.x	0.0
are	NP	#x.are(x)	-1.0
are	NP	are	-1.0
are	NP	l(x,x)	-1.0
are	NP/NP	#x88.x88	0.0
of	(NP\NP)/NP	#x.#y.is(x,at(y))	0.0
of	(NP\NP)/NP	#x.x	0.0
of	(NP\NP)/NP	#x435.#x433.is(x433,of(x435))	-1.0
of	(NP\NP)/NP	l(x,x)	-1.0
now	(S\NP)/(S\NP)	#x430.x430	-1.0
now	(S\NP)/(S\NP)	l(x,x)	-1.0
on	(NP\NP)/NP	#x.at(x)	0.0
on	(NP\NP)/NP	#x.#y.#z.is(y,at(x,z))	0.0
on	(NP\NP)/NP	#x435.#x433.is(x433,on(x435))	-1.0
on	(NP\NP)/NP	l(x,x)	-1.0
on	(S\NP)/NP	#x399.#x398.turn(until(is(x398,at(x399))))	-1.0
a	NP/N	#x.x	0.0
a	NP/N	#x449.#x444.is(x449,x444)	-1.0
a	NP/N	#x450.#x445.is(x450,at(x445))	-1.0
a	NP/N	#x.x @ a	-1.0
a	NP/N	l(x,x)	-1.0
move	S/NP	#x.move(x)	0.0
move	S/NP	l(x,x)	-1.0
go	S/NP	#x.move(x)	0.0
lamp	N	lamp	0.0
right	N	right	0.0
right	NP	right	-1.0
right	NP	#x.right(x)	-1.0
right	NP	l(x,x)	-1.0
grey	N/N	#x.x @ grey	0.0
grey	N/N	#x414.#x402.turn(until(is(x414 @ grey,at(x402))))	-1.0
grey	N/N	#x453.#x445.is(x453 @ grey,at(x445))	-1.0
grey	N/N	#x410.#x400.turn(until(is(x410 @ grey,x400)))	-1.0
grey	N/N	#x391.#x388.is(x391 @ grey,x388)	-1.0
grey	N/N	l(x,x)	-1.0
potted	N/N	#x.x @ potted	0.0
potted	N/N	#x451.#x444.is(x451 @ potted,x444)	-1.0
potted	N/N	#x453.#x445.is(x453 @ potted,at(x445))	-1.0
potted	N/N	#x414.#x402.turn(until(is(x414 @ potted,at(x402))))	-1.0
potted	N/N	#x410.#x400.turn(until(is(x410 @ potted,x400)))	-1.0
potted	N/N	l(x,x)	-1.0
the	NP/N	#x.at(x)	0.0
the	NP/N	#x.x	0.0
the	NP/N	#x407.#x400.turn(until(is(x407,x400)))	-1.0
the	NP/N	#x409.#x402.turn(until(is(x409,at(x402))))	-1.0
the	NP/N	#x.x @ the	-1.0
the	NP/N	#x450.#x445.is(x450,thet(x445))	-1.0
the	NP/N	l(x,x)	-1.0
the	(NP/NP)/N	#x.#y.y @ x	0.0
the	(NP/NP)/N	#x.x	0.0
the	(NP/NP)/N	l(x,x)	-1.0
the	NP/NP	#x.#y.x @ the(y)	-1.0
the	NP/NP	#x.the(x)	-1.0
the	NP/NP	l(x,x)	-1.0
the	NP/NP	#x549.x549	-1.0
the	NP/NP	#x611.#x397.the(x397,x611)	-1.0
with	NP/NP	#x.x	0.0
with	NP/NP	#x404.#x400.turn(until(is(x404,x400)))	-1.0
with	NP/NP	#x406.#x402.turn(until(is(x406,at(x402))))	-1.0
face	S/NP	#x.turn(x)	0.0
blue	N/N	#x.x @ blue	0.0
painting	N	#x.painting(x)	0.0
painting	NP	#x.painting(x)	0.0
there	NP	#x.verify(x)	0.0
there	NP	#x.there(x)	-1.0
there	NP	there	-1.0
there	NP	l(x,x)	-1.0
until	NP/NP	#x.#y.x @ until(y)	0.0
until	NP/NP	#x.until(x)	0.0
until	NP/NP	l(x,x)	-1.0
until	NP/NP	#x714.until(is(x714,at(right)))	-1.0
until	NP/NP	#x611.#x397.until(x397,x611)	-1.0
front	NP	front	0.0
front	NP	#x.front(x)	-1.0
front	NP	l(x,x)	-1.0
to	((S\NP)\(S\NP))/NP	#x.#y.y @ x	0.0
to	((S\NP)\(S\NP))/NP	#x455.#x446.is(x446,x455)	-1.0
to	((S\NP)\(S\NP))/NP	#x456.#x446.is(x446,at(x456))	-1.0
to	((S\NP)\(S\NP))/NP	l(x,x)	-1.0
to	(NP\NP)/NP	#x.#y.y @ at(x)	0.0
to	(NP\NP)/NP	#x.#y.y @ x	0.0
to	(NP\NP)/NP	#x.at(x)	0.0
to	(NP\NP)/NP	#x416.#x403.turn(until(is(x403,x416)))	-1.0
to	(NP\NP)/NP	#x417.#x403.turn(until(is(x403,at(x417))))	-1.0
to	(NP\NP)/NP	#x435.#x433.is(x433,to(x435))	-1.0
to	(NP\NP)/NP	l(x,x)	-1.0
wall	N	#x.wall(x)	0.0
wall	NP	#x.wall(x)	0.0
open	N/N	#x.x @ open	0.0
open	N/N	#x410.#x400.turn(until(is(x410 @ open,x400)))	-1.0
open	N/N	#x414.#x402.turn(until(is(x414 @ open,at(x402))))	-1.0
open	N/N	#x453.#x445.is(x453 @ open,at(x445))	-1.0
open	N/N	#x391.#x388.is(x391 @ open,x388)	-1.0
open	N/N	l(x,x)	-1.0
walk	S/NP	#x.#y.move(x @ y)	0.0
walk	S/NP	#x.move(x)	0.0
walk	S/NP	#x.walk(x)	-1.0
walk	S/NP	l(x,x)	-1.0
